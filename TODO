Too much to list, but here's a list anyway:

* Sound
    More and better sound effects
    Music

* Engineering screen
    make comms power do something
    Some sliders set only a maximum, while others control power usage
	this is confusing.  Figure something out to make it less confusing.
	(partially done -- fuzzing the power output kind of makes the
	situation more obvious.)

* Communications screen
    Starbase comm stuff
    Enemy ship comm monitoring
    Friendly ship stuff
    bridge-to-bridge comm
    take damage into account
    Allow submitting natural language queries to 'the computer' and
      get responses verbally (text to speech) and in actions.  Ideally,
      these could be activated via speech recognition as well, but this
      may not be feasible.

      For example:

	Computer, set a course for starbase one.
	(computer verbalizes: "setting course for starbase one, heading blah, mark blah."
	and ship rotates to face sb-01)

      More examples of commands which I'd like to work:

	* Navigate to <destination>
	* Set a course for <destination>
	* Lower/raise/set shields (to <value>)
	* engage docking system
	* disengage docking system
	* how far to <destination>
	* range to <destination>
	* Do we have enough fuel to reach <destination>
	* calculate a course to <destination> (replies with heading and mark)
	* damage/status report (replies with list of damaged systems in order from
	  most damaged to least, eg: "Warp drive: 50%, Impulse drive: 70%, all
	  other systems are within normal range."
	* engage warp drive
	* (set) warp factor <value>
	* (set) impulse to <value> percent

* Navigation screen

* Weapons screen

* Science station

* Setup screen
  Try to make it more intuitive for people who are seeing it for
  the first time ever.

* write some kind of guide to hacking, to make it easier for others to
  contribute to this codebase.

* computer-controlled-ships
  loads of AI improvements and basic functionality
  remains to be done.
  Avoid going inside/through planets.  This is mostly done
  though I still see a ship crash into a planet every once it a blue moon

* starbase behavior
  improve docking with starbase

* anomalies, etc. need to be implemented

* 3D out the window view
  Fade distant objects to black

* comms screen:
  need to be able to communicate with starbases -- request
  various things of the starbase.   Partially done, but still needs work.
  intercept chatter between enemy ships
  ??? need to figure out what the hell the comms screen is good for.

* Damage control screen:
  Make the various components of the systems less generic
  Make damage control a bit less useless

* Need sound for wormhole travel
* I think the universe needs to be bigger, you can see too far out
  the main screen relative to the instruments, size of the universe.
  Or else maybe some kind of fog.
* joystick support for weapons and nav, and maybe others.
* allow mining of asteroids, asteroid mining bots or something
* trading of stuff mined from asteroids at stations.
* Need to be able to checkpoint-restart universe state on server side
  (how do lua scripts fit into checkpoint restart?)
* more lua event callbacks, some mission scripts done with lua
  basically, flesh out the lua scripting system.
* Remove use of "heading" field in snis_entity
* Make space monster do something interesting
* Make space monster work again
* Allow to somehow mine asteroids and derelicts for something (fuel?)
* make tractor beam work again/better.
* Currently, number keypad doesn't work for numbers.  It should work.

LOBBY
* Allow multi-homed snis_server to work.  Currently only one ip addr is known
  to the lobby, so if machines are coming from multiple interfaces, it doesn't
  really work.
* Allow lobbyless operation, user configurable port for snis_server, and client
  able to connect to user configureable ip and port.

NICE TO HAVE:

* Make the universe more realistic in a variety of ways (but not too realistic,
  i.e. if the ship is the nominal size of The Enterprise, then Saturn would be
  bigger than the current known in-game universe -- obviously that is too much
  realism.   Also, have planets orbiting stars, stations orbiting planets, etc,
  instead of what we have now, which is just stuff randomly sprinkled around.

* Allow multiple server processes and travel between them via warp gates.
* Make art assets live on server and be transmitted to clients on demand.

* Speech recognition with natural language support (see COMMS section above)
  to make requests of "the computer"
